version: '3.8'

services:
  nginx:
    image: nginx:alpine
    container_name: tz_nginx
    ports:
      - "80:80"
    volumes:
      - ./:/var/www
      - ./docker/nginx/conf.d:/etc/nginx/conf.d
    depends_on:
      - php
      - frontend
    networks:
      - tz_network

  php:
    build:
      context: .
      dockerfile: docker/php/Dockerfile
    container_name: tz_php
    volumes:
      - ./:/var/www
    depends_on:
      - mysql
      - redis
    networks:
      - tz_network

  frontend:
    build:
      context: .
      dockerfile: docker/node/Dockerfile
    container_name: tz_frontend
    volumes:
      - ./:/var/www
    command: sh -c "cd /var/www && npm install && npm run dev"
    networks:
      - tz_network

  mysql:
    image: mysql:8.0
    container_name: tz_mysql
    command: --default-authentication-plugin=mysql_native_password
    environment:
      MYSQL_DATABASE: ${DB_DATABASE:-tz}
      MYSQL_USER: ${DB_USERNAME:-tz}
      MYSQL_PASSWORD: ${DB_PASSWORD:-secret}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD:-root}
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - tz_network

  redis:
    image: redis:alpine
    container_name: tz_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - tz_network

  queue:
    build:
      context: .
      dockerfile: docker/php/Dockerfile
    container_name: tz_queue
    command: php artisan queue:work
    volumes:
      - ./:/var/www
    depends_on:
      - mysql
      - redis
    networks:
      - tz_network

networks:
  tz_network:
    driver: bridge

volumes:
  mysql_data:
  redis_data:
